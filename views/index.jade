doctype html
html
    head
      meta(charset='utf-8')
      title Quassel Web App
      meta(http-equiv='X-UA-Compatible', content='IE=edge')
      meta(name='description', content='Quassel Web App')
      meta(name='author', content='Joël Charles')
      meta(name='author', content='Johannes Siipola')
      link(rel='shortcut icon', href='favicon.ico')
      link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
      link(rel='stylesheet', href='/stylesheets/fonts.css')
      link(rel='stylesheet', href='/stylesheets/style.css')

    body.login-page(ng-app="quassel")
      #container(ng-controller="SocketController", ng-class="{connecting: connecting, disconnected: disconnected}")
        #header
          span.quassel-logo
          span Quassel Web App
          small(ng-if="connecting", ng-cloak)  (connecting)
          small(ng-if="disconnected && !connecting", ng-cloak)  (disconnected)
          button.btn.btn-default.logout(type="button", ng-if="logged && !disconnected", ng-cloak, ng-click="reload()") Logout
          button.btn.btn-default.reconnect(type="button", ng-if="disconnected && !connecting", ng-cloak, ng-click="reload()") Reconnect
        .container.login(ng-if="!logged")
          .row
            .col-md-3
            .col-md-6.row.login-container
                alert(ng-if="alert != ''", ng-cloak) {{alert}}
                form#logonform(role='form', ng-submit="login()")
                  h1 Connect to Quassel Core
                  unless settings.forcedefault
                    .form-group
                      label(for='host') Server address
                      input#host.form-control(type='text', value='#{settings.default.host}', ng-model="$parent.host")
                    .form-group
                      label(for='port') Server port
                      input#port.form-control(type='text', value='#{settings.default.port}', ng-model="$parent.port")
                  .form-group
                    label(for='user') User name
                    input#user.form-control(type='text', ng-model="$parent.user")
                  .form-group
                    label(for='password') Password
                    input#password.form-control(type='password', ng-model="$parent.password")
                  button.btn.btn-primary.btn-connect(type='submit', ng-disabled="!firstconnected || disconnected", disabled) Connect
            .col-md-3
        
        .logged.ng-hide(ng-show="logged", ng-controller="NetworkController")
            script(type="text/ng-template", id="modalJoinChannel.html")
              .modal-header
                button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
                h4#myModalLabel.modal-title
                  | Join a channel on
                  span#join-network-name {network name}
              .modal-body
                .form-group
                  input.form-control(type='text', placeholder='Enter channel name', ng-model="name")
              .modal-footer
                button.btn.btn-default(type='button', ng-click='cancel()') Cancel
                button.btn.btn-primary(type='button', ng-click='ok()') Join channel
            #buffer-pane.animation.pane(ng-init="shown = true", ng-class="{small: !shown}")
              .buffer-container
                .network(id="network-{{network.networkName}}", ng-class="{on: network.isConnected, off: !network.isConnected}", ng-repeat-start="network in networks | orderBy:'networkName'", dropdown)
                  span.collapsable(ng-class="{expanded: network.isConnected, collapsed: !network.isConnected}", toggle="{{network.networkName}}-channels")
                  span.network-name(ng-click="showBuffer(network.getStatusBuffer())") {{network.networkName}}
                  a.dropdown-network.dropdown-toggle(data-toggle="dropdown", dropdown-toggle)
                    span.glyphicon.glyphicon-menu-hamburger
                  ul.dropdown-menu.dropdown-menu-right(role="menu")
                    li
                      a(href="#", ng-click="openModalJoinChannel(network)") Join channel
                    li(ng-if="network.isConnected")
                      a(href="#", ng-click="disconnect(network)") Disconnect
                    li(ng-if="!network.isConnected")
                      a(href="#",  ng-click="connect(network)") Connect
                .network-channels.clearfix(id="{{network.networkName}}-channels", ng-repeat-end)
                  .channel(ng-class="{on: channel.active, off: !channel.active, 'buffer-highlight': channel.highlight == 2, 'buffer-newmessage': channel.highlight == 1, active: buffer.id == channel.id}", ng-repeat="channel in network.getBufferHashMap().values() | channelsFilter", ng-if="!channel.isHidden()", dropdown)
                    span.channel-icon
                    span.channel-name(ng-click="showBuffer(channel)") {{channel.name}} {{channel.id}}
                    a.dropdown-channel.dropdown-toggle(data-toggle="dropdown", dropdown-toggle)
                      span.glyphicon.glyphicon-menu-hamburger
                    ul.dropdown-menu.dropdown-menu-right(role="menu")
                      li(ng-if="channel.active")
                        a(href="#", ng-click="channelPart(channel)") Part
                      li(ng-if="!channel.active")
                        a(href="#", ng-click="channelJoin(channel)") Join
                      li(ng-if="!channel.active")
                        a(href="#", ng-click="channelDelete(channel)") Delete
              .buffer-bottom-bar
                a.showhide.right(href="#", ng-click="shown = !shown")
            #center.animation(ng-controller="FilterController")
              .topic
                #topic {{buffer.topic}}
                .btn-group.prefs(dropdown)
                  button.btn.btn-default.btn-sm.dropdown-toggle(type="button", data-toggle="dropdown", dropdown-toggle)
                    span.glyphicon.glyphicon-th-list
                  ul.dropdown-menu(role="menu")
                    li.dropdown-header Hide events
                    li(ng-repeat="fil in currentFilter")
                      a(href="#")
                        input(type="checkbox", id="filter-type-{{fil.type}}", data-message-type="{{fil.type}}", ng-model="fil.value")
                        label(for="filter-type-{{fil.type}}") {{fil.label}}
                    li.divider
                    li
                      a.btn(ng-click="useDefault()", href="#") Use default
                    li
                      a.btn(ng-click="setAsDefault()", href="#") Set as default
              ul.backlog(backlog="loadMore", parent-buffer="buffer", current-filter="currentFilter")
                li.irc-message(ng-repeat="message in buffer.messages.values() | orderBy:'id'", class="type-{{message.type}}", ng-class="{highlighted: message.isHighlighted()}", ng-if="!currentFilter2[message.type]")
                  span.timestamp
                    span {{message.datetime | duration}}
                  span.nick(data-nickhash="{{message.sender | hash}}") {{message | decoratenick}}
                  span.message(ng-bind-html="message | decoratecontent | color")
              .input(ng-controller="InputController")
                form#messageform(ng-submit="sendMessage()")
                  input#messagebox(type='text', placeholder='Enter your message here', ng-model="message", ng-keydown="keydown($event)", caret)
            #nick-pane.animation.pane(ng-init="shown2 = true", ng-class="{small: !shown2}")
              .buffer-container
                .user-group
                  span.expanded(data-target='users-operator', toggle="users-operator")
                  span.group-name operators
                #users-operator.group-users.clearfix
                  .user(ng-repeat="user in buffer.nickUserMap | usersop:buffer | orderBy:'nick'")
                    span.user-icon(ng-class="{'user-icon-away': user.away, 'user-icon-active': !user.away}")
                    span.user-name {{user.nick}}
                .user-group
                  span.expanded(data-target='users-voiced', toggle="users-voiced")
                  span.group-name voiced
                #users-voiced.group-users.clearfix
                  .user(ng-repeat="user in buffer.nickUserMap | usersvoiced:buffer | orderBy:'nick'")
                    span.user-icon(ng-class="{'user-icon-away': user.away, 'user-icon-active': !user.away}")
                    span.user-name {{user.nick}}
                .user-group
                  span.expanded(data-target='users-user', toggle="users-user")
                  span.group-name users
                #users-user.group-users.clearfix
                  .user(ng-repeat="user in buffer.nickUserMap | usersstd:buffer | orderBy:'nick'")
                    span.user-icon(ng-class="{'user-icon-away': user.away, 'user-icon-active': !user.away}")
                    span.user-name {{user.nick}}
              .buffer-bottom-bar
                a.showhide.left(href="#", ng-click="shown2 = !shown2")

      script(src='/javascripts/jquery-1.11.1.min.js')
      script(src='/javascripts/angular.min.js')
      script(src='/javascripts/ui-bootstrap-tpls-0.12.0.min.js')
      script(src='/javascripts/backlog.js')
      script(src='/socket.io/socket.io.js')
      script(src='/javascripts/ngSocket.js')
      script(src='/javascripts/events.js')
      script(src='/javascripts/angular-sanitize.min.js')
      script(src='/javascripts/libquassel.js')
      script(src='/javascripts/json-patch.js')
      script(src='/javascripts/controller.js')
      script(src='/javascripts/views.js')
      script(src='/javascripts/script.js')